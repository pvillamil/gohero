services:

  app:
    container_name: app
    build:
      context: .
      dockerfile: ./app.dockerfile
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./storage/logs:/storage/logs
    ports:
      - "9900:9900"
    networks:
      - gohero
  
  postgresql:
    image: postgres:15.4
    container_name: postgresql
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /data/postgres
      TZ: Asia/Tehran
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${DB_USERNAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgresql:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - gohero
    restart: unless-stopped

  redis:
    image: redis:7.2-alpine
    container_name: redis
    restart: unless-stopped
    command: [ "redis-server", "/etc/redis/redis.conf" ]
    volumes:
      - ./docker/redis/redis.conf:/etc/redis/redis.conf
      - redis:/etc/redis
      - redis:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 10
    networks:
      - gohero

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGA_USERNAME}
      PGADMIN_DEFAULT_PASSWORD: ${PGA_PASSWORD}
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "8090:80"
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - gohero

volumes:
  postgresql:
  redis:
  pgadmin:

networks:
  gohero:
    driver: bridge